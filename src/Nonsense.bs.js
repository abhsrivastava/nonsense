// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Js_json = require("bs-platform/lib/js/js_json.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");

function Nonsense(Props) {
  var match = React.useState((function () {
          return /* Words */[/* [] */0];
        }));
  var setState = match[1];
  var state = match[0];
  var decodeWords = function (json) {
    var array = Js_json.decodeArray(json);
    if (array !== undefined) {
      return Belt_Array.reduce(array, /* [] */0, (function (acc, value) {
                    var v = Js_json.decodeString(value);
                    if (v !== undefined) {
                      return /* :: */[
                              v,
                              acc
                            ];
                    } else {
                      return acc;
                    }
                  }));
    } else {
      return /* [] */0;
    }
  };
  var gotWords = function (words$prime) {
    return Curry._1(setState, (function (state) {
                  if (state) {
                    return /* Words */[List.append(state[0], words$prime)];
                  } else {
                    return /* Error */0;
                  }
                }));
  };
  React.useEffect((function () {
          fetch("https://random-word-api.herokuapp.com/word?number=20").then((function (prim) {
                    return prim.json();
                  })).then((function (json) {
                  gotWords(decodeWords(json));
                  return Promise.resolve(undefined);
                }));
          
        }), ([]));
  var tmp;
  if (state) {
    var words = state[0];
    tmp = words ? React.createElement("ul", undefined, Belt_List.toArray(Belt_List.mapWithIndex(words, (function (i, word) {
                      return React.createElement("li", {
                                  key: String(i)
                                }, word);
                    })))) : "loading....";
  } else {
    tmp = "Application is in error!";
  }
  return React.createElement("div", undefined, tmp);
}

var make = Nonsense;

exports.make = make;
/* react Not a pure module */
